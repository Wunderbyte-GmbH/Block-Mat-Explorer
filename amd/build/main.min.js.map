{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["/**\n * Bla-bla\n */\nimport {setWsToken} from \"./token\";\nimport {getCourseDetailsById, getCourses} from \"./api\";\nimport {courseCardTemplate} from \"./templates\";\nimport * as loading from \"./loading\";\nimport {\n  FIELD_FILTER_MAP,\n  FILTER_TYPES,\n  SELECTORS,\n  SORT_TYPES,\n  updateFilterState,\n  updateMainContainer,\n  initDropDownData,\n  prepareDropDowns,\n  initiateSearch,\n  updateCourseCount,\n  getFilterState,\n  prepareSortDropdown,\n  getFiltersFromTargets,\n  getElement,\n  setInstanceId\n} from \"./static-selectors\";\nimport {createPagination} from \"./pagination\";\n\nlet courses = [];\nlet courseDetailsMap = new Map();\n\nconst handleFilter = () => {\n  let filteredCourses = [...courses];\n  const filterStates = getFilterState();\n\n  if (filterStates[FILTER_TYPES.QUERY] !== null) {\n    const toSearch = filterStates[FILTER_TYPES.QUERY].toLowerCase();\n    filteredCourses = filteredCourses.filter((course) => {\n      return (\n          course.title.toLowerCase().includes(toSearch) ||\n          course.description.toLowerCase().includes(toSearch)\n      );\n    });\n  }\n  for (const key in FIELD_FILTER_MAP) {\n    if (filterStates[FIELD_FILTER_MAP[key]] !== null) {\n      filteredCourses = filteredCourses.filter((course) => {\n        if (Array.isArray(course[key])) {\n          const arr = course[key].map(obj => obj.id);\n          return arr.includes(filterStates[FIELD_FILTER_MAP[key]]);\n        } else {\n          return course[key].id === filterStates[FIELD_FILTER_MAP[key]];\n        }\n      });\n    }\n  }\n\n  if (filterStates.ORDER) {\n    const {direction, field} = SORT_TYPES[filterStates.ORDER];\n    filteredCourses.sort((a, b) => {\n      if (a[field] > b[field]) {\n        return direction;\n      } else if (a[field] < b[field]) {\n        return -direction;\n      } else {\n        return 0;\n      }\n    });\n  }\n  const returnValues = [...filteredCourses];\n\n  updateCourseCount(filteredCourses.length);\n  initiatePagination({\n    currentPage: filterStates.CURRENT_PAGE + 1,\n    total: filteredCourses.length,\n    perPage: filterStates.PAGE_SIZE,\n  });\n  updateMainContainer(\n    filteredCourses\n      .splice(filterStates.CURRENT_PAGE * filterStates.PAGE_SIZE, filterStates.PAGE_SIZE)\n      .map((course) => courseCardTemplate(course))\n  );\n\n  return returnValues;\n};\n\nconst initiatePagination = ({ currentPage, total, perPage }) => {\n  createPagination({\n    container: getElement(\"matTopPaginationContainer\"),\n    currentPage,\n    total,\n    perPage,\n    onChange: (page) => {\n      if (updateFilterState(FILTER_TYPES.CURRENT_PAGE, page - 1)) {\n        handleFilter();\n      }\n    },\n  });\n\n  createPagination({\n    container: getElement(\"matBottomPaginationContainer\"),\n    currentPage,\n    total,\n    perPage,\n    onChange: (page) => {\n      if (updateFilterState(FILTER_TYPES.CURRENT_PAGE, page - 1)) {\n        handleFilter();\n      }\n    },\n  });\n};\n\nexport const init = ({wsToken, categoryids, userid, instanceId}) => {\n  setWsToken(wsToken);\n  console.log(instanceId);\n  setInstanceId(instanceId);\n  loading.show();\n  getCourses(\n      categoryids,\n      userid,\n      (response) => {\n        if (response) {\n          courses = response;\n          const initFilters = getFiltersFromTargets(courses);\n          initiateSearch(handleFilter);\n          initDropDownData(initFilters);\n          prepareDropDowns(handleFilter, initFilters, null);\n          prepareSortDropdown(handleFilter);\n          handleFilter();\n\n          setTimeout(() => {\n            loading.hide();\n          }, 1000);\n        }\n      });\n};\n"],"names":["courses","Map","handleFilter","filteredCourses","filterStates","FILTER_TYPES","QUERY","toSearch","toLowerCase","filter","course","title","includes","description","key","FIELD_FILTER_MAP","Array","isArray","map","obj","id","ORDER","direction","field","SORT_TYPES","sort","a","b","returnValues","length","initiatePagination","currentPage","CURRENT_PAGE","total","perPage","PAGE_SIZE","splice","_ref","container","onChange","page","_ref2","wsToken","categoryids","userid","instanceId","console","log","loading","show","response","initFilters","setTimeout","hide"],"mappings":"+sCA0BIA,QAAU,GACS,IAAIC,UAErBC,aAAe,SACfC,gBAAkB,IAAIH,eACpBI,cAAe,wCAEoB,OAArCA,aAAaC,8BAAaC,OAAiB,OACvCC,SAAWH,aAAaC,8BAAaC,OAAOE,cAClDL,gBAAkBA,gBAAgBM,QAAQC,QAEpCA,OAAOC,MAAMH,cAAcI,SAASL,WACpCG,OAAOG,YAAYL,cAAcI,SAASL,gBAI7C,MAAMO,OAAOC,kCAC4B,OAAxCX,aAAaW,kCAAiBD,QAChCX,gBAAkBA,gBAAgBM,QAAQC,YACpCM,MAAMC,QAAQP,OAAOI,MAAO,QAClBJ,OAAOI,KAAKI,KAAIC,KAAOA,IAAIC,KAC5BR,SAASR,aAAaW,kCAAiBD,cAE3CJ,OAAOI,KAAKM,KAAOhB,aAAaW,kCAAiBD,aAM5DV,aAAaiB,MAAO,OAChBC,UAACA,UAADC,MAAYA,OAASC,4BAAWpB,aAAaiB,OACnDlB,gBAAgBsB,MAAK,CAACC,EAAGC,IACnBD,EAAEH,OAASI,EAAEJ,OACRD,UACEI,EAAEH,OAASI,EAAEJ,QACdD,UAED,UAIPM,aAAe,IAAIzB,8DAEPA,gBAAgB0B,QAClCC,mBAAmB,CACjBC,YAAa3B,aAAa4B,aAAe,EACzCC,MAAO9B,gBAAgB0B,OACvBK,QAAS9B,aAAa+B,qDAGtBhC,gBACGiC,OAAOhC,aAAa4B,aAAe5B,aAAa+B,UAAW/B,aAAa+B,WACxEjB,KAAKR,SAAW,iCAAmBA,WAGjCkB,cAGHE,mBAAqBO,WAACN,YAAEA,YAAFE,MAAeA,MAAfC,QAAsBA,+CAC/B,CACfI,WAAW,+BAAW,6BACtBP,YAAAA,YACAE,MAAAA,MACAC,QAAAA,QACAK,SAAWC,QACL,sCAAkBnC,8BAAa2B,aAAcQ,KAAO,IACtDtC,mDAKW,CACfoC,WAAW,+BAAW,gCACtBP,YAAAA,YACAE,MAAAA,MACAC,QAAAA,QACAK,SAAWC,QACL,sCAAkBnC,8BAAa2B,aAAcQ,KAAO,IACtDtC,iCAMYuC,YAACC,QAACA,QAADC,YAAUA,YAAVC,OAAuBA,OAAvBC,WAA+BA,wCACvCH,SACXI,QAAQC,IAAIF,+CACEA,YACdG,QAAQC,2BAEJN,YACAC,QACCM,cACKA,SAAU,CACZlD,QAAUkD,eACJC,aAAc,0CAAsBnD,6CAC3BE,oDACEiD,mDACAjD,aAAciD,YAAa,+CACxBjD,cACpBA,eAEAkD,YAAW,KACTJ,QAAQK,SACP"}