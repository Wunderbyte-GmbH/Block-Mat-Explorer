define("block_mat_explorer/static-selectors",["exports","./templates","core/str"],(function(_exports,_templates,_str){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.updateMainContainer=_exports.updateFilterState=_exports.updateCourseCount=_exports.setInstanceId=_exports.prepareSortDropdown=_exports.prepareDropDowns=_exports.initiateSearch=_exports.initDropDownData=_exports.getFiltersFromTargets=_exports.getFilterState=_exports.getElement=_exports.SORT_TYPES=_exports.SELECTORS=_exports.FILTER_TYPES=_exports.FIELD_FILTER_MAP=void 0;const instances={};_exports.setInstanceId=id=>{if(!instances[id]){instances[id]={root:document.getElementById("id-"+id),dropDownData:null,filterState:{QUERY:null,CURRENT_PAGE:0,PAGE_SIZE:12,ORDER:null}};for(const key in FIELD_FILTER_MAP)instances[id].filterState[FIELD_FILTER_MAP[key]]=null}currentInstance=instances[id]};let currentInstance=null;const getElement=(id,selector)=>{const instance=(id=>instances[id])(id);return null!=instance&&instance.root?instance.root.querySelector(`#${selector}`):(console.warn("No instance root set. Call setInstanceId(id) first."),null)};_exports.getElement=getElement;_exports.initDropDownData=data=>{currentInstance.dropDownData=data};const getFilterState=()=>currentInstance.filterState;_exports.getFilterState=getFilterState;const updateFilterState=(type,param)=>{const filterState=currentInstance.filterState;if(null===param)return!1;return filterState[type]!==param&&(filterState.CURRENT_PAGE=0,filterState[type]=param,!0)};_exports.updateFilterState=updateFilterState;const resetFilterStateByType=type=>null!==currentInstance.filterState[type]&&(currentInstance.filterState[type]=null,!0),prepareDropDowns=async function(handleFilter,activeFilters,triggeredFilter){let reset=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const dropdownContainer=getElement(SELECTORS.DROPDOWN_CONTAINER),dropDowns=[];for(const filter of currentInstance.dropDownData){const selectedOption=currentInstance.filterState[FIELD_FILTER_MAP[filter.name]],defaultOption=null!==selectedOption?filter.options.find((opt=>opt.id==selectedOption)):null;if(activeFilters&&triggeredFilter){const activeFilter=activeFilters.find((af=>af.name===filter.name));filter.options.forEach((option=>{if(filter.name===triggeredFilter&&!reset)return;const match=null==activeFilter?void 0:activeFilter.options.find((of=>of.name===option.name));option.disabled=void 0===match}))}const caption=await(0,_str.get_string)(FIELD_FILTER_MAP[filter.name].toLowerCase()+"filtercaption","block_mat_explorer"),dropDown=(0,_templates.dropDownTemplate)({title:caption,caption:(null==defaultOption?void 0:defaultOption.name)||caption,options:filter.options,selectedOption:defaultOption,onOptionChange:optionId=>{if(updateFilterState(FIELD_FILTER_MAP[filter.name],optionId)){const filteredCourses=handleFilter(),filters=getFiltersFromTargets(filteredCourses);prepareDropDowns(handleFilter,filters,filter.name)}},onReset:()=>{if(resetFilterStateByType(FIELD_FILTER_MAP[filter.name])){const filteredCourses=handleFilter(),filters=getFiltersFromTargets(filteredCourses);prepareDropDowns(handleFilter,filters,filter.name,!0)}},className:"mat-dropdown-"+filter.name.toLowerCase()});dropDowns.push(dropDown)}$(dropdownContainer).empty().append(dropDowns)};_exports.prepareDropDowns=prepareDropDowns;_exports.updateMainContainer=elements=>{const mainContainer=getElement(SELECTORS.MAIN_CONTAINER);$(mainContainer).empty().append(elements)};_exports.initiateSearch=handleFilter=>{const searchInput=getElement(SELECTORS.SEARCH_INPUT),clearButton=getElement(SELECTORS.SEARCH_CLEAR_BUTTON);searchInput.addEventListener("keyup",(e=>{updateFilterState(FILTER_TYPES.QUERY,e.target.value)&&handleFilter(getFilterState())})),clearButton.addEventListener("click",(()=>{searchInput.value="",updateFilterState(FILTER_TYPES.QUERY,"")&&handleFilter(getFilterState())}))};_exports.updateCourseCount=async count=>{const courseCount=getElement(SELECTORS.COURSE_COUNT),caption=await(0,_str.get_string)(1!==count?"coursecountcaption":"coursecountonecaption","block_mat_explorer");courseCount.innerHTML=`${count||"0"} ${caption}`};const prepareSortDropdown=async handleFilter=>{const container=getElement(SELECTORS.SORT_DROPDOWN_CONTAINER),options=Object.entries(SORT_TYPES).map((_ref=>{let[id,{name:name}]=_ref;return{id:id,name:name}})),selected=currentInstance.filterState.ORDER,defaultOption=selected?options.find((o=>o.id===selected)):null,caption=await(0,_str.get_string)("sortcaption","block_mat_explorer"),sortDropDown=await(0,_templates.dropDownTemplate)({title:caption,caption:(null==defaultOption?void 0:defaultOption.name)||caption,options:options,selectedOption:defaultOption,onOptionChange:optionId=>{updateFilterState(FILTER_TYPES.ORDER,optionId)&&(handleFilter(),prepareSortDropdown(handleFilter))},onReset:()=>{resetFilterStateByType(FILTER_TYPES.ORDER)&&(handleFilter(),prepareSortDropdown(handleFilter))}});$(container).empty().append(sortDropDown)};_exports.prepareSortDropdown=prepareSortDropdown;const SELECTORS={MAIN_WRAPPER:"matMainWrapper",MAIN_CONTAINER:"matMainContainer",DROPDOWN_CONTAINER:"matDropDownContainer",LOADING_CONTAINER:"matLoadingContainer",SEARCH_INPUT:"matSearchInput",SEARCH_CLEAR_BUTTON:"matClearSearch",COURSE_COUNT:"matCourseCount",TOP_PAGINATION_CONTAINER:"matTopPaginationContainer",BOTTOM_PAGINATION_CONTAINER:"matBottomPaginationContainer",SORT_DROPDOWN_CONTAINER:"matSortContainer",COURSE_DETAIL_MODAL:"mat_modal"};_exports.SELECTORS=SELECTORS;const FILTER_TYPES={QUERY:"QUERY",CATEGORY:"CATEGORY",TOPICS:"TOPICS",TARGET_GROUP:"TARGET_GROUP",CURRENT_PAGE:"CURRENT_PAGE",ORDER:"ORDER"};_exports.FILTER_TYPES=FILTER_TYPES;const FIELD_FILTER_MAP={category:"CATEGORY",mc_moodle_themen:"TOPICS",mc_moodle_zielgruppe:"TARGET_GROUP"};_exports.FIELD_FILTER_MAP=FIELD_FILTER_MAP;const SORT_TYPES={alphabetASC:{field:"title",direction:1,name:"Alphabetisch aufsteigend"},alphabetDESC:{field:"title",direction:-1,name:"Alphabetisch absteigend"},mcOriginalDESC:{field:"MCOriginal",direction:-1,name:"MINT-Campus-Original zuerst"},favouritesDESC:{field:"favourite",direction:-1,name:"Favoriten zuerst"}};_exports.SORT_TYPES=SORT_TYPES,(0,_str.get_string)("sortalphabetasc","block_mat_explorer").then((str=>SORT_TYPES.alphabetASC.name=str)),(0,_str.get_string)("sortalphabetdesc","block_mat_explorer").then((str=>SORT_TYPES.alphabetDESC.name=str)),(0,_str.get_string)("sortmcoriginaldesc","block_mat_explorer").then((str=>SORT_TYPES.mcOriginalDESC.name=str)),(0,_str.get_string)("sortfavouritesdesc","block_mat_explorer").then((str=>SORT_TYPES.favouritesDESC.name=str));const getFilterOptionsFromTargetsByKey=(key,targets)=>{const optionsCount={};for(const target of targets){const field=target[key];if(!field)continue;const items=Array.isArray(field)?field:[field];for(const item of items)null!=item&&item.id&&(optionsCount[item.id]?optionsCount[item.id].count++:optionsCount[item.id]={count:1,value:item.value})}return Object.entries(optionsCount).map((_ref2=>{let[id,{count:count,value:value}]=_ref2;return{id:id,name:value,count:count}})).sort(((a,b)=>a.name.localeCompare(b.name)))},getFiltersFromTargets=targets=>{const filters=(keys=>keys.map((key=>({name:key,options:[]}))))(Object.keys(FIELD_FILTER_MAP));for(const filter of filters)filter.options=getFilterOptionsFromTargetsByKey(filter.name,targets);return filters};_exports.getFiltersFromTargets=getFiltersFromTargets}));

//# sourceMappingURL=static-selectors.min.js.map